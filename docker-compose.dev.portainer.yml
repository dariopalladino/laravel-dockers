version: '2'
services:

  #PHP FPM Service
  phpfpm:
    image: dariopad/php-fpm-laravel:7.4
    container_name: laravel-php
    restart: unless-stopped
    tty: true
    env_file:
      - ./docker-compose.env
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks:
      - dpnetwork

  #Nginx Service
  webserver:
    image: dariopad/nginx-laravel:latest
    container_name: laravel-nginx
    restart: unless-stopped
    tty: true
    env_file:
      - ./docker-compose.env    
    #Temporary enabling host 8080 and 8443 for dev
    ports:
      - $NGINX_PORT_BINDING
      - $NGINX_SSL_PORT_BINDING
    depends_on:
      - phpfpm
      - mysql57
    volumes:
      - ./src:/var/www
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./.docker/nginx/ssl/:/etc/nginx/ssl/ # if you want to update ssl conf
    networks:
      - dpnetwork

  #MySQL Service
  mysql57:
    image: mysql:5.7.22
    container_name: laravel-mysql57
    restart: unless-stopped
    tty: true
    env_file:
      - ./docker-compose.env    
    #for host dev enabling 33061
    ports:
      - $MYSQL_PORT_BINDING
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE_NAME
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD #to be changed
      MYSQL_ALLOW_EMPTY_PASSWORD: 1 # temporary for dev envs
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./.docker/mysql/config:/etc/mysql #if you have specific configurations
      - ./.docker/mysql/dump:/docker-entrypoint-initdb.d # to run your database installation
    networks:
      - dpnetwork

  rediscache:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    networks:
      - dpnetwork

  npm137:
     image: node:13.7
     container_name: laravel-npm
     depends_on:
       - phpfpm     
     volumes:
       - ./src:/var/www
     working_dir: /var/www
     entrypoint: ['npm', "update"]
     networks:
       - dpnetwork

#Docker Networks
networks:
  dpnetwork:
    external:
        name: commsnet

#Volumes
volumes:
  dbdata:
    external:
      name: dbdata